// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: excel.server.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Excel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CafeInfoExcelTableInfo *CafeInfoExcelTableInfo `protobuf:"bytes,1,opt,name=CafeInfoExcelTableInfo,proto3" json:"CafeInfoExcelTableInfo,omitempty"`
}

func (x *Excel) Reset() {
	*x = Excel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Excel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Excel) ProtoMessage() {}

func (x *Excel) ProtoReflect() protoreflect.Message {
	mi := &file_excel_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Excel.ProtoReflect.Descriptor instead.
func (*Excel) Descriptor() ([]byte, []int) {
	return file_excel_server_proto_rawDescGZIP(), []int{0}
}

func (x *Excel) GetCafeInfoExcelTableInfo() *CafeInfoExcelTableInfo {
	if x != nil {
		return x.CafeInfoExcelTableInfo
	}
	return nil
}

type CafeInfoExcelTableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrigCafeInfoExcelTable []*CafeInfoExcelTable         `protobuf:"bytes,1,rep,name=OrigCafeInfoExcelTable,proto3" json:"OrigCafeInfoExcelTable,omitempty"`
	CafeInfoExcelTables    map[int32]*CafeInfoExcelTable `protobuf:"bytes,2,rep,name=CafeInfoExcelTables,proto3" json:"CafeInfoExcelTables,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CafeInfoExcelTableInfo) Reset() {
	*x = CafeInfoExcelTableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeInfoExcelTableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeInfoExcelTableInfo) ProtoMessage() {}

func (x *CafeInfoExcelTableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_excel_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeInfoExcelTableInfo.ProtoReflect.Descriptor instead.
func (*CafeInfoExcelTableInfo) Descriptor() ([]byte, []int) {
	return file_excel_server_proto_rawDescGZIP(), []int{1}
}

func (x *CafeInfoExcelTableInfo) GetOrigCafeInfoExcelTable() []*CafeInfoExcelTable {
	if x != nil {
		return x.OrigCafeInfoExcelTable
	}
	return nil
}

func (x *CafeInfoExcelTableInfo) GetCafeInfoExcelTables() map[int32]*CafeInfoExcelTable {
	if x != nil {
		return x.CafeInfoExcelTables
	}
	return nil
}

type CafeInfoExcelTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CafeId                  int32  `protobuf:"varint,1,opt,name=CafeId,proto3" json:"CafeId,omitempty"`
	IsDefault               bool   `protobuf:"varint,2,opt,name=IsDefault,proto3" json:"IsDefault,omitempty"`
	OpenConditionCafeId     string `protobuf:"bytes,3,opt,name=OpenConditionCafeId,proto3" json:"OpenConditionCafeId,omitempty"`
	OpenConditionCafeInvite string `protobuf:"bytes,4,opt,name=OpenConditionCafeInvite,proto3" json:"OpenConditionCafeInvite,omitempty"`
}

func (x *CafeInfoExcelTable) Reset() {
	*x = CafeInfoExcelTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CafeInfoExcelTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CafeInfoExcelTable) ProtoMessage() {}

func (x *CafeInfoExcelTable) ProtoReflect() protoreflect.Message {
	mi := &file_excel_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CafeInfoExcelTable.ProtoReflect.Descriptor instead.
func (*CafeInfoExcelTable) Descriptor() ([]byte, []int) {
	return file_excel_server_proto_rawDescGZIP(), []int{2}
}

func (x *CafeInfoExcelTable) GetCafeId() int32 {
	if x != nil {
		return x.CafeId
	}
	return 0
}

func (x *CafeInfoExcelTable) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *CafeInfoExcelTable) GetOpenConditionCafeId() string {
	if x != nil {
		return x.OpenConditionCafeId
	}
	return ""
}

func (x *CafeInfoExcelTable) GetOpenConditionCafeInvite() string {
	if x != nil {
		return x.OpenConditionCafeInvite
	}
	return ""
}

var File_excel_server_proto protoreflect.FileDescriptor

var file_excel_server_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x05, 0x45,
	0x78, 0x63, 0x65, 0x6c, 0x12, 0x55, 0x0a, 0x16, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x66,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x16, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63,
	0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb8, 0x02, 0x0a, 0x16,
	0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x51, 0x0a, 0x16, 0x4f, 0x72, 0x69, 0x67, 0x43, 0x61,
	0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x16, 0x4f, 0x72, 0x69, 0x67, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x43, 0x61, 0x66,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13,
	0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x1a, 0x61, 0x0a, 0x18, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x66, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x43, 0x61, 0x66, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43,
	0x61, 0x66, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x61, 0x66, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x66, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_excel_server_proto_rawDescOnce sync.Once
	file_excel_server_proto_rawDescData = file_excel_server_proto_rawDesc
)

func file_excel_server_proto_rawDescGZIP() []byte {
	file_excel_server_proto_rawDescOnce.Do(func() {
		file_excel_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_excel_server_proto_rawDescData)
	})
	return file_excel_server_proto_rawDescData
}

var file_excel_server_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_excel_server_proto_goTypes = []interface{}{
	(*Excel)(nil),                  // 0: proto.Excel
	(*CafeInfoExcelTableInfo)(nil), // 1: proto.CafeInfoExcelTableInfo
	(*CafeInfoExcelTable)(nil),     // 2: proto.CafeInfoExcelTable
	nil,                            // 3: proto.CafeInfoExcelTableInfo.CafeInfoExcelTablesEntry
}
var file_excel_server_proto_depIdxs = []int32{
	1, // 0: proto.Excel.CafeInfoExcelTableInfo:type_name -> proto.CafeInfoExcelTableInfo
	2, // 1: proto.CafeInfoExcelTableInfo.OrigCafeInfoExcelTable:type_name -> proto.CafeInfoExcelTable
	3, // 2: proto.CafeInfoExcelTableInfo.CafeInfoExcelTables:type_name -> proto.CafeInfoExcelTableInfo.CafeInfoExcelTablesEntry
	2, // 3: proto.CafeInfoExcelTableInfo.CafeInfoExcelTablesEntry.value:type_name -> proto.CafeInfoExcelTable
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_excel_server_proto_init() }
func file_excel_server_proto_init() {
	if File_excel_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_excel_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Excel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeInfoExcelTableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CafeInfoExcelTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_excel_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_excel_server_proto_goTypes,
		DependencyIndexes: file_excel_server_proto_depIdxs,
		MessageInfos:      file_excel_server_proto_msgTypes,
	}.Build()
	File_excel_server_proto = out.File
	file_excel_server_proto_rawDesc = nil
	file_excel_server_proto_goTypes = nil
	file_excel_server_proto_depIdxs = nil
}
